package pages

import (
	"fmt"
	"github.com/cativovo/budget-tracker/internal/repository"
	"github.com/cativovo/budget-tracker/internal/ui"
	"github.com/cativovo/budget-tracker/internal/ui/layouts"
)

type HomeProps struct {
	Transactions []repository.TransactionsByDate
	QueryParams  string
	HasNextPage  bool
	AssetsStore  ui.AssetsStore
}

templ Home(props HomeProps) {
	@layouts.Main(layouts.MainProps{
		AssetsStore: props.AssetsStore,
	}) {
		<ul id="transactions" class="space-y-1">
			for _, v := range props.Transactions {
				if len(v.Transactions) > 0 {
					<li>
						<div class="flex py-1 text-xs">
							<span>{ v.Date.Format("January 02, Monday") } </span>
							<div class="inline-block ml-auto space-x-2">
								if v.TotalExpenses> 0 {
									<span>Expense: { formatAmount(v.TotalExpenses, repository.TransactionTypeExpense) }</span>
								}
								if v.TotalIncome > 0 {
									<span>Income: { formatAmount(v.TotalIncome, repository.TransactionTypeIncome) }</span>
								}
							</div>
						</div>
						<ul class="pl-4 space-y-1 list-disc border-t divide-y">
							for _, t := range v.Transactions {
								<li class="flex gap-1 items-center py-2">
									// TODO: get the value of icon from db
									<i data-lucide="chart-pie"></i>
									<span>{ t.Name }</span>
									<span class="ml-auto">{ formatAmount(t.Amount, t.TransactionType) }</span>
								</li>
							}
						</ul>
					</li>
				}
			}
		</ul>
		<button
			id="load-more-btn"
			hx-get={ string(templ.URL("/?" + props.QueryParams)) }
			hx-select="#transactions>li"
			hx-swap="afterend"
			hx-target="#transactions>li:last-child"
			hx-select-oob="load-more-btn"
			hx-push-url="true"
		>
			load more
		</button>
	}
}

func formatAmount(amount int, transactionType repository.TransactionType) string {
	var symbol string
	switch transactionType {
	case repository.TransactionTypeExpense:
		symbol = "-"
	case repository.TransactionTypeIncome:
		symbol = "+"
	}

	const centsInPeso float64 = 100

	return fmt.Sprintf("%s%.2f", symbol, float64(amount)/2)
}
